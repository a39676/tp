package demo.finance.cryptoCoin.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class SymbolCheckForFuture {

	public static void main(String[] args) {
		List<String> spot = new ArrayList<>();
		List<String> future = new ArrayList<>();
		List<String> except = new ArrayList<>();

		String spotStr = "BTC,ETH,BNB,SOL,XRP,DOGE,ADA,AVAX,SHIB,TRX,WBTC,LINK,DOT,BCH,UNI,NEAR,MATIC,LTC,PEPE,ICP,ETC,WBETH,APT,RNDR,HBAR,XLM,ATOM,ARB,FIL,STX,IMX,MKR,SUI,VET,GRT,TAO,OP,LDO,INJ,WIF,AR,FLOKI,FTM,THETA,NOT,RUNE,BONK,JASMY,FET,AAVE,TIA,PYTH,ALGO,SEI,JUP,FLOW,STRK,QNT,ENA,PENDLE,GALA,BEAMX,AXS,EOS,BTTC,ORDI,GNO,ENS,NEO,EGLD,XTZ,RONIN,SAND,WLD,ZK,CHZ,NEXO,SNX,MINA,MANA,DEXE,ROSE,XEC,W,CFX,BOME,LPT,CAKE,KLAY,IOTA,OM,APE,1INCH,RPL,KAVA,LUNC,CKB,FTT,TFUEL,CRV,PAXG,TWT,BLUR,AXL,IOTX,WOO,COMP,PEOPLE,RAY,SSV,ASTR,ETHFI,MEME,AEVO,BNX,OSMO,GLM,IO,ARKM,KSM,1000SATS,GMT,DYDX,SUPER,SFP,LUNA,MANTA,ZEC,ZIL,HOT,CELO,CVX,ANKR,ILV,ZRX,POLYX,SKL,JTO,ELF,METIS,RSR,DYM,BICO,BAT,RVN,ENJ,DASH,FXS,JST,QTUM,GMX,GAL,SC,DCR,MASK,TRB,ID,GAS,LRC,YGG,FLUX,T,PIXEL,ALT,ONE,UMA,SUSHI,CHR,VANRY,AMP,API3,YFI,ONT,VTHO,GLMR,ACH,AUDIO,NTRN,BAL,EDU,BB,TRU,KDA,BAND,MAGIC,RLC,SXP,LSK,ICX,PROM,COTI,STORJ,C98,IOST,WAXP,POND,CTSI,DGB,ONG,XAI,SLP,CREAM,AI,NMR,SAGA,CELR,DUSK,CYBER,JOE,XNO,ACE,REZ,SUN,IQ,OMNI,BLZ,REQ,CVC,AUCTION,POWR,XVS,USTC,HIVE,SNT,KNC,PORTAL,MOVR,PYR,CTK,SPELL,SYN,PHA,HIGH,ARK,ZEN,PUNDIX,SYS,DENT,RIF,BAKE,GNS,HOOK,PHB,STEEM,WIN,STRAX,MTL,HFT,DODO,NFP,BNT,STG,AGLD,LQTY,SCRT,ALICE,FRONT,MAV,STPT,TNSR,ACA,MBOX,ALPHA,RDNT,LEVER,ARPA,OXT,XVG,QI,DAR,LOOM,GHST,RARE,GTC,BADGER,ARDR,HIFI,NKN,OGN,ORN,AEUR,RAD,TKO,POLS,WRX,LTO,ATA,TLM,QKC,ERN,CLV,COMBO,CTXC,REI,PERP,MBL,DATA,KMD,REN,FORTH,DIA,STMX,MLN,LIT,COS,FUN,NULS,ALCX,FIS,FLM,UNFI,WAN,DEGO,AERGO,BEL,PSG,LINA,MDX,FIDA,VIC,IDEX,LOKA,FARM,AVA,BETA,PDA,REEF,BSW,MDT,QUICK,IRIS,KEY,VOXEL,UTK,BURGER,KP3R,UFT,BIFI,ADX,CHESS,PIVX,WING,BAR,AKRO,FIO,AMB,HARD,VITE,DOCK,VIDT,CITY,ALPACA,GFT,AST,SANTOS,FIRO,VIB,ALPINE,BOND,OG,TROY,VGX,DF,LAZIO,JUV,PORTO,OAX,FOR,PROS,ATM,ACM,CVP,EPX,OOKI,ASR,LISTA,ZRO";
		String futureStr = "SUSHI,INJ,BNT,SAGA,RDNT,ZRX,HIGH,XAI,SPELL,XTZ,BNB,DAR,MEW,JOE,PENDLE,XMR,ETC,ALICE,HOOK,ACE,REZ,BNBUSDC,REEF,BAT,DOGE,1000BONK,TRX,STORJ,SNX,1000BONKUSDC,DOGEUSDC,XLM,MATICUSDC,IOTX,ARK,OMNI,UMA,DASH,KAVA,OXT,RUNE,APE,BNX,LTCUSDC,OP,KEY,SKL,GLM,ALT,MTL,LTC,ETHBTC,KSM,MANA,TRB,FLOW,CHR,W,ONDO,AEVO,GAL,USDC,RNDR,OGN,ENA,STMX,BLUR,KNC,ENJ,XRPUSDC,ATOM,NMR,ENS,GAS,ATA,IOST,HBAR,ZEC,POLYX,ETHUSDT_240927,GALA,EDU,GTC,ALGO,MANTA,LISTA,BSV,LRC,PYTH,ENAUSDC,ORBS,STG,STX,ARPA,CELO,QNT,AI,1INCH,T,IO,PIXEL,SOLUSDC,TAO,LINA,AR,FIL,STRK,ZETA,DODOX,SOL,AXL,LOOM,RONIN,BLZ,1000SATS,COMBO,FILUSDC,GMT,XVS,GMX,BAND,LDO,XRP,PORTAL,CRV,BEL,BOND,DOT,ONE,MAVIA,APT,FRONT,SEI,CRVUSDC,ANKR,MAV,MEME,API3,ASTR,HOT,QTUM,IOTA,ETHUSDC,ADA,JTO,LSK,LIT,ZRO,STEEM,BIGTIME,ETHFI,BTCUSDT_240927,YFI,USTC,ETH,MYRO,ORDI,ALPHA,WOO,SFP,ETHFIUSDC,RLC,ORDIUSDC,1000XEC,CFX,FXS,BADGER,ID,HFT,ETHUSDT_241227,UNFI,NEO,POWR,SAND,WAXP,LINK,MINA,RIF,CELR,AGLD,RSR,REN,LPT,JASMY,NOT,PHB,ARBUSDC,YGG,BTCUSDT_241227,EGLD,LUNA2,DYM,ONT,IMX,VET,NFP,LQTY,NEOUSDC,COTI,VANRY,ARB,LINKUSDC,BAKE,GRT,AUCTION,FLM,MASK,EOS,WIFUSDC,ZK,NEARUSDC,BAL,BB,SUI,METIS,BCHUSDC,DENT,TRU,CKB,SSV,TOKEN,CYBER,C98,ZEN,NEAR,TWT,BEAMX,SUIUSDC,BCH,BOME,1000SHIB,TLM,AVAXUSDC,ETHW,HIFI,BICO,AAVE,TON,ICP,1000SHIBUSDC,WIF,BOMEUSDC,1000LUNC,TURBO,AVAX,CAKE,NTRN,JUP,MAGIC,ROSE,MOVR,MATIC,OM,ONG,XVG,TIA,PEOPLE,MKR,BTCUSDC,THETA,1000PEPEUSDC,UNI,PERP,RVN,ARKM,NKN,KLAY,DEFI,TIAUSDC,TNSR,COMP,BTCDOM,BTC,OMG,ICX,1000PEPE,SUPER,FET,1000RATS,LEVER,1000FLOKI,FTM,AMB,SXP,XEM,WLD,ZIL,DYDX,AXS,WLDUSDC,CHZ,ILV,DUSK,ACH,CTSI,KAS";
		String exceptStr = "BNX,NOT,BTC,ETH,SOL,BNB,BOND,GLM";

		spot.addAll(Arrays.asList(spotStr.split(",")));
		future.addAll(Arrays.asList(futureStr.split(",")));
		except.addAll(Arrays.asList(exceptStr.split(",")));
		except.addAll(Arrays.asList(exceptStr.split(",")));

		List<String> cross = new ArrayList<>();
		List<String> spotOnly = new ArrayList<>();
		List<String> kList = new ArrayList<>();

		for (String symbol : spot) {
			if (except.contains(symbol)) {
				continue;
			}
			if (future.contains(symbol)) {
				cross.add(symbol);
			} else if (future.contains("1000" + symbol)) {
				cross.add("1000" + symbol);
				kList.add(symbol);
			} else {
				spotOnly.add(symbol);
			}
		}

		System.out.println(cross);
		System.out.println(spotOnly);
		System.out.println(kList);

		List<String> input = new ArrayList<>();
		String inputStr = "HOT,MKR,APT,KNC,GMT,LOOM,ANKR,NTRN,STORJ,ICX,BCH,PORTAL,ENS,CFX,NEAR,FTM,ETHFI,BONK,SAGA,FIL,ADA,PEOPLE,FLM,HIFI,TAO,POLYX,ACH,ILV,RONIN,DYM,VET,AAVE,SUI,TRU,OP,STX,SEI,OM,ZEN,ZEC,TIA";
		input.addAll(Arrays.asList(inputStr.split(",")));
		for (int i = 0; i < input.size(); i++) {
			String symbol = input.get(i);
			if (kList.contains(symbol)) {
				input.set(i, "1000" + symbol);
			} else {
				input.set(i, symbol + "USDT");
			}
		}
		System.out.println(input);
		for (int i = 0; i < input.size(); i++) {
			System.out.print(input.get(i) + ",");
		}
	}
}
